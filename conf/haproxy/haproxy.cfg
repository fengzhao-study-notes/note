#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen admin_status
	bind 0.0.0.0:8090
	stats enable
	mode http
	stats uri /status
	stats refresh 30s
	# define access username and password
	stats auth  admin:admin
	stats admin if TRUE

# L4 load balance
listen sshsrvs :10220
	mode tcp
	balance leastconn
	server node1 192.168.56.3:22 check
	server node2 192.168.56.4:22 check

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend web_service
    bind *:5000
    #acl url_static       path_end       -i /static /images /javascript /stylesheets`
	# define a acl for static request
    acl url_static       path_end       -i .html .css .js .jpg .png .gif

	# acl base on request src
    acl invalid_src src 192.168.1.103
	acl curl_agent hdr_sub(User-Agent) -i curl
	#block if invalid_src
	#block if curl_agent
	# error page redirect
	#errorfile 403 /etc/haproxy/403.html

	# add a response header
	rspadd Haproxy:\ haproxy-resp if url_static

	# add a request header
	reqadd Haproxy:\ haproxy-req if url_static

    use_backend static          if url_static
    default_backend             dynamic

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend dynamic
    balance     roundrobin
    server      node1   192.168.56.3:80 check inter 3000 rise 2 fall 2 maxconn 5000
	option httpchk GET /index.php
http-check expect status 200

backend static
	balance		roundrobin
	cookie SERVERID insert indirect nocache

	# L7 health check
	option httpchk GET /index.html
	# response content check
	#http-check expect rstring ^node
	# status code check
	http-check expect status 200

	# cookie keep conn 会话保持
	server		node2	192.168.56.4:80		check inter 3000 rise 2 fall 2 maxconn 5000 cookie node2
	server		lab	    192.168.1.201:80	check inter 3000 rise 2 fall 2 maxconn 5000  cookie lab

#---------------------------------------------------------------------
# round robin balancing between the various backends
#--------------------------------------------------------------------
#listen web
#   bind  0.0.0.0:80
#	mode http
#	option httplog
#	maxconn 1024
#   balance     roundrobin
#   server node2  192.168.56.4:80

